import sys
import os
import math
from PyQt6 import QtWidgets, QtCore, QtGui
from PyQt6.QtCore import Qt, QPropertyAnimation, QEasingCurve, QPoint, QRectF, QPointF, QThread, pyqtSignal
from PyQt6.QtGui import QPainter, QColor, QPen, QFont, QPainterPath, QBrush
from PyQt6.QtWidgets import (
    QApplication, QMainWindow, QWidget, QVBoxLayout, 
    QHBoxLayout, QPushButton, QLabel, QFrame, QFileDialog, QGraphicsView, QGraphicsScene, QGridLayout, QLineEdit, QMessageBox,
    QProgressBar, QTextEdit, QSizePolicy, QSpacerItem, QScrollArea
)
from PyPDF2 import PdfReader
import re
from pdf_thread import PDFProcessThread
from table_db import TableWindow

from database import Database


class SideGrip(QtWidgets.QWidget):
    def __init__(self, parent, edge):
        QtWidgets.QWidget.__init__(self, parent)
        self.edge = edge
        if edge in [Qt.Edge.LeftEdge, Qt.Edge.RightEdge]:
            self.setCursor(Qt.CursorShape.SizeHorCursor)
            self.setFixedWidth(10)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∑–∞—Ö–≤–∞—Ç–∞
            self.setStyleSheet("background: transparent;")
        else:
            self.setCursor(Qt.CursorShape.SizeVerCursor)
            self.setFixedHeight(10)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∑–∞—Ö–≤–∞—Ç–∞
            self.setStyleSheet("background: transparent;")
        
        self.mousePos = None
        
    def mousePressEvent(self, event):
        if event.button() == Qt.MouseButton.LeftButton:
            self.mousePos = event.globalPosition().toPoint()
            self.windowPos = self.window().pos()
            self.windowSize = self.window().size()
            
    def mouseMoveEvent(self, event):
        if self.mousePos is None:
            return
            
        delta = event.globalPosition().toPoint() - self.mousePos
        window = self.window()
        
        if self.edge == Qt.Edge.LeftEdge:
            newX = self.windowPos.x() + delta.x()
            newWidth = self.windowSize.width() - delta.x()
            if newWidth >= window.minimumWidth():
                window.setGeometry(newX, window.y(), newWidth, window.height())
        elif self.edge == Qt.Edge.RightEdge:
            newWidth = self.windowSize.width() + delta.x()
            if newWidth >= window.minimumWidth():
                window.resize(newWidth, window.height())
        elif self.edge == Qt.Edge.TopEdge:
            newY = self.windowPos.y() + delta.y()
            newHeight = self.windowSize.height() - delta.y()
            if newHeight >= window.minimumHeight():
                window.setGeometry(window.x(), newY, window.width(), newHeight)
        elif self.edge == Qt.Edge.BottomEdge:
            newHeight = self.windowSize.height() + delta.y()
            if newHeight >= window.minimumHeight():
                window.resize(window.width(), newHeight)
        
    def mouseReleaseEvent(self, event):
        self.mousePos = None
        self.windowPos = None
        self.windowSize = None
        
class MainWindow(QtWidgets.QMainWindow):
    _SIDE_GRIP_SIZE = 5
    
    def __init__(self):
        super().__init__()
        
        # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ä–∞–º–∫—É –æ–∫–Ω–∞
        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)
        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground)
        self.setMinimumSize(600, 400)  # –£–º–µ–Ω—å—à–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        self.resize(1200, 1000)
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
        self.excel1_path = None
        self.excel2_path = None
        
        # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç —Å —Ñ–æ–Ω–æ–º
        central_widget = QWidget()
        central_widget.setObjectName("centralWidget")
        central_widget.setStyleSheet("""
            QWidget#centralWidget {
                background-color: #1A1B26;
                border: 1px solid #2F3242;
                border-radius: 15px;
            }
        """)
        self.setCentralWidget(central_widget)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–º–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
        self.left_grip = SideGrip(self, Qt.Edge.LeftEdge)
        self.right_grip = SideGrip(self, Qt.Edge.RightEdge)
        self.top_grip = SideGrip(self, Qt.Edge.TopEdge)
        self.bottom_grip = SideGrip(self, Qt.Edge.BottomEdge)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout
        main_layout = QVBoxLayout(central_widget)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.setSpacing(0)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
        self.setup_title_bar()
        main_layout.addWidget(self.titleBar)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        content_widget = QWidget()
        content_layout = QHBoxLayout(content_widget)
        content_layout.setContentsMargins(0, 0, 0, 0)
        content_layout.setSpacing(0)
        
        # –°–æ–∑–¥–∞–µ–º –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
        self.setup_side_menu()
        content_layout.addWidget(self.sideMenu)
        
        # –°–æ–∑–¥–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.contentArea = QFrame()
        self.contentArea.setObjectName("contentArea")
        content_area_layout = QVBoxLayout(self.contentArea)
        content_area_layout.setContentsMargins(0, 0, 0, 0)
        content_area_layout.setSpacing(0)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ª–µ–π–±–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.page_title = QLabel("–ì–ª–∞–≤–Ω–∞—è")
        self.page_title.setObjectName("pageTitle")
        self.page_title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        content_area_layout.addWidget(self.page_title)
        
        self.stackedWidget = QtWidgets.QStackedWidget()
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.home_page = self.setup_home_page()
        self.settings_page = self.setup_settings_page()
        
        self.stackedWidget.addWidget(self.home_page)
        self.stackedWidget.addWidget(self.settings_page)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å–æ–ª—å
        self.setup_console()
        
        content_area_layout.addWidget(self.stackedWidget)
        content_area_layout.addWidget(self.consoleWidget)
        
        content_layout.addWidget(self.contentArea)
        main_layout.addWidget(content_widget)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.is_menu_expanded = False
        self.is_console_expanded = True
        self.menu_min_width = 50
        self.menu_max_width = 250
        self.console_min_height = 30
        self.console_max_height = 800  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É –∫–æ–Ω—Å–æ–ª–∏
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stats = {
            'success': 75,
            'fail': 15,
            'question': 10
        }
        
        # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
        self.file1_path = ""
        self.file2_path = ""
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫
        self.button_texts = {
            'home': ('üè†', 'üè†  –ì–ª–∞–≤–Ω–∞—è'),
            'settings': ('‚öô', '‚öô  –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
        }
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π
        self.setup_animations()
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤
        self.setup_connections()
        
        # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        self.stackedWidget.setCurrentIndex(0)
        self.sideMenu.setMaximumWidth(self.menu_min_width)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫
        self.homeButton.setText(self.button_texts['home'][0])
        self.settingsButton.setText(self.button_texts['settings'][0])
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é
        self.setStyleSheet("""
            QMainWindow {
                background-color: transparent;
            }
            
            QWidget#sideMenu {
                background-color: #24273A;
                border: none;
            }
            
            QWidget#contentArea {
                background-color: #1A1B26;
            }
            
            QWidget#titleBar {
                background-color: #24273A;
                border-bottom: 1px solid #2F3242;
                border-top-left-radius: 15px;
                border-top-right-radius: 15px;
            }
            
            QPushButton {
                background-color: transparent;
                color: white;
                border: none;
            }
            
            QPushButton#minimizeButton, QPushButton#maximizeButton, QPushButton#closeButton {
                background-color: transparent;
                color: white;
                border: none;
                padding: 4px;
                border-radius: 4px;
                font-family: "Segoe UI";
                font-size: 16px;
            }
            
            QPushButton#minimizeButton:hover, QPushButton#maximizeButton:hover {
                background-color: rgba(255, 255, 255, 0.1);
            }
            
            QPushButton#closeButton:hover {
                background-color: #DE3163;
            }
            
            QPushButton#menuButton, QPushButton#homeButton, QPushButton#settingsButton {
                background-color: transparent;
                color: white;
                border: none;
                padding: 8px;
                text-align: left;
                border-radius: 4px;
                font-size: 14px;
            }
            
            QPushButton#menuButton:hover, QPushButton#homeButton:hover, QPushButton#settingsButton:hover {
                background-color: rgba(255, 255, 255, 0.1);
            }
            
            QPushButton#toggleConsoleButton {
                background-color: #7B5AF4;
                border-radius: 16px;
                padding: 8px;
                min-width: 120px;
            }
            
            QPushButton#toggleConsoleButton:hover {
                background-color: #8D6FF5;
            }
            
            QLabel {
                color: #24273A;
            }
            
            QTextEdit#console {
                background-color: #1A1B26;
                color: white;
                border: 1px solid #2F3242;
                border-radius: 8px;
                padding: 12px;
                font-family: Consolas;
                font-size: 13px;
            }
            
            QTextEdit#console QScrollBar:vertical {
                border: none;
                background: #1A1B26;
                width: 8px;
                margin: 0;
            }

            QTextEdit#console QScrollBar::handle:vertical {
                background: #7B5AF4;
                border-radius: 4px;
                min-height: 20px;
            }

            QTextEdit#console QScrollBar::handle:vertical:hover {
                background: #8D6FF5;
            }

            QTextEdit#console QScrollBar::add-line:vertical,
            QTextEdit#console QScrollBar::sub-line:vertical {
                height: 0px;
            }

            QTextEdit#console QScrollBar::add-page:vertical,
            QTextEdit#console QScrollBar::sub-page:vertical {
                background: none;
            }
            
            QPushButton#selectFile1Button, QPushButton#selectFile2Button, QPushButton#selectPdfFolderButton, QPushButton#loadPdfButton {
                background-color: #7B5AF4;
                color: white;
                border: none;
                border-radius: 8px;
                padding: 8px 16px;
                font-size: 14px;
                font-weight: bold;
                min-width: 150px;
            }
            
            QPushButton#selectFile1Button:hover, QPushButton#selectFile2Button:hover, QPushButton#selectPdfFolderButton:hover, QPushButton#loadPdfButton:hover {
                background-color: #8D6FF5;
            }
            
            QPushButton#startButton {
                background-color: #7B5AF4;
                color: white;
                border: none;
                border-radius: 8px;
                padding: 12px 24px;
                font-size: 16px;
                font-weight: bold;
                margin-top: 16px;
            }
            
            QPushButton#startButton:hover {
                background-color: #8D6FF5;
            }
            
            QWidget#statsWidget {
                background-color: transparent;
                padding: 0;
                margin: 0;
            }
            
            QLabel#file1PathLabel, QLabel#file2PathLabel, QLabel#selectedPdfFolderLabel {
                color: #FFFFFF;
                font-size: 14px;
                padding-left: 16px;
                opacity: 0.9;
            }
            
            QLabel#pdfFolderLabel {
                color: #FFFFFF;
                font-size: 14px;
                font-weight: bold;
            }
            
            QLabel#pageTitle {
                color: white;
                font-size: 18px;
                font-weight: bold;
                padding: 20px;
                background-color: #1A1B26;
                border-bottom: 1px solid #2F3242;
            }
            
            QLabel#progressLabel {
                color: white;
                font-size: 14px;
                font-weight: bold;
            }
            
            QLabel#searchResultsLabel {
                color: #8F96B3;
                font-size: 14px;
                padding: 0 8px;
                min-width: 80px;
            }
            
            QPushButton#navButton {
                background-color: transparent;
                color: #8F96B3;
                border: none;
                border-radius: 16px;
                font-size: 14px;
                font-weight: bold;
            }
            
            QPushButton#navButton:hover {
                color: #FFFFFF;
                background-color: rgba(255, 255, 255, 0.1);
            }
            
            QPushButton#navButton:disabled {
                color: #3D4258;
            }
            
            QProgressBar {
                background-color: #1A1B26;
                border: 1px solid #2F3242;
                border-radius: 4px;
                color: white;
                text-align: center;
            }
            
            QProgressBar::chunk {
                background-color: #7B5AF4;
                border-radius: 3px;
            }
            
            QPushButton#clearDbButton {
                background-color: #F87381;
                color: white;
                border: none;
                border-radius: 8px;
                padding: 12px 24px;
                font-size: 14px;
                font-weight: bold;
            }
            
            QPushButton#clearDbButton:hover {
                background-color: #FF8C98;
            }
            
            QLineEdit#consoleSearch {
                background-color: #2F3242;
                color: white;
                border: 1px solid #3D4258;
                border-radius: 16px;
                padding: 8px 16px;
                font-size: 14px;
            }
            
            QLineEdit#consoleSearch:focus {
                border: 1px solid #7B5AF4;
            }
            
            QPushButton#clearSearchButton {
                background-color: transparent;
                color: #8F96B3;
                border: none;
                border-radius: 16px;
                font-size: 16px;
                font-weight: bold;
            }
            
            QPushButton#clearSearchButton:hover {
                color: #FFFFFF;
                background-color: rgba(255, 255, 255, 0.1);
            }
        """)
        
    def setup_title_bar(self):
        self.titleBar = QWidget()
        self.titleBar.setObjectName("titleBar")
        self.titleBar.setFixedHeight(32)
        
        layout = QHBoxLayout(self.titleBar)
        layout.setContentsMargins(10, 0, 10, 0)
        layout.setSpacing(8)
        
        title = QLabel("AnnyProgram")
        title.setStyleSheet("color: white; font-size: 12px;")
        
        self.minimizeButton = QPushButton("‚îÄ")
        self.maximizeButton = QPushButton("‚ñ°")
        self.closeButton = QPushButton("√ó")
        
        self.minimizeButton.setObjectName("minimizeButton")
        self.maximizeButton.setObjectName("maximizeButton")
        self.closeButton.setObjectName("closeButton")
        
        self.minimizeButton.setFixedSize(24, 24)
        self.maximizeButton.setFixedSize(24, 24)
        self.closeButton.setFixedSize(24, 24)
        
        layout.addWidget(title)
        layout.addStretch()
        layout.addWidget(self.minimizeButton)
        layout.addWidget(self.maximizeButton)
        layout.addWidget(self.closeButton)
        
    def setup_side_menu(self):
        self.sideMenu = QWidget()
        self.sideMenu.setObjectName("sideMenu")
        self.sideMenu.setMinimumWidth(50)
        self.sideMenu.setMaximumWidth(250)
        
        layout = QVBoxLayout(self.sideMenu)
        layout.setContentsMargins(8, 16, 8, 16)
        layout.setSpacing(4)
        
        self.menuButton = QPushButton("‚ò∞")
        self.menuButton.setMinimumSize(34, 34)
        
        line = QtWidgets.QFrame()
        line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        
        self.homeButton = QPushButton("üè†")
        self.homeButton.setMinimumSize(34, 34)
        
        self.settingsButton = QPushButton("‚öô")
        self.settingsButton.setMinimumSize(34, 34)
        
        layout.addWidget(self.menuButton)
        layout.addWidget(line)
        layout.addWidget(self.homeButton)
        layout.addWidget(self.settingsButton)
        layout.addStretch()
        
    def setup_home_page(self):
        home_page = QWidget()
        layout = QVBoxLayout(home_page)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(20)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ –ª–µ–π–±–ª–æ–≤
        files_frame = QFrame()
        files_frame.setObjectName("filesFrame")
        files_frame.setStyleSheet("""
            QFrame#filesFrame {
                background-color: #2F3242;
                border-radius: 15px;
                padding: 20px;
            }
        """)
        
        # –°–æ–∑–¥–∞–µ–º grid layout –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ –ª–µ–π–±–ª–æ–≤
        files_layout = QGridLayout(files_frame)
        files_layout.setContentsMargins(20, 20, 20, 20)
        files_layout.setSpacing(15)
        
        # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ 1 –∏ –ª–µ–π–±–ª 1
        self.select_file1_button = QPushButton("–û–∫—Ç—Ä—ã—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–¥")
        self.select_file1_button.setObjectName("selectFile1Button")
        
        
        files_layout.addWidget(self.select_file1_button, 0, 1)
        
        
        # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ 2 –∏ –ª–µ–π–±–ª 2
       
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å—Ç—è–∂–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
        files_layout.setColumnStretch(1, 1)  # –õ–µ–π–±–ª—ã –±—É–¥—É—Ç —Ä–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å—Å—è
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—Ä–µ–π–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        layout.addWidget(files_frame)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –≤–∏–¥–∂–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats_layout = QHBoxLayout()
        stats_layout.setContentsMargins(0, 20, 0, 20)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
        
        self.stats_widget = StatsWidget()
        self.stats_widget.setObjectName("statsWidget")
        
        stats_layout.addWidget(self.stats_widget)
        
        layout.addLayout(stats_layout)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å"
        start_button_layout = QHBoxLayout()
        start_button_layout.addStretch()
        
        # self.start_button = QPushButton("–ù–∞—á–∞—Ç—å")
        # self.start_button.setObjectName("startButton")
        # self.start_button.setFixedWidth(200)
        
        # start_button_layout.addWidget(self.start_button)
        # start_button_layout.addStretch()
        
        layout.addLayout(start_button_layout)
        layout.addStretch()
        
        return home_page
        
    def setup_console(self):
        self.consoleWidget = QWidget()
        self.consoleWidget.setMinimumHeight(100)
        self.consoleWidget.setMaximumHeight(800)
        
        layout = QVBoxLayout(self.consoleWidget)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(8)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–µ—Ä—Ö–Ω—é—é –ø–∞–Ω–µ–ª—å –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
        console_header = QWidget()
        console_header_layout = QHBoxLayout(console_header)
        console_header_layout.setContentsMargins(0, 0, 0, 0)
        console_header_layout.setSpacing(8)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        self.toggleConsoleButton = QPushButton("‚ñº")
        self.toggleConsoleButton.setMinimumSize(32, 32)
        self.toggleConsoleButton.setMaximumSize(32, 32)
        self.toggleConsoleButton.setObjectName("toggleConsoleButton")
        
        # –°—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞
        self.console_search = QtWidgets.QLineEdit()
        self.console_search.setPlaceholderText("üîç –ü–æ–∏—Å–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏...")
        self.console_search.setObjectName("consoleSearch")
        self.console_search.textChanged.connect(self.search_console)
        
        # –°—á–µ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.search_results_label = QLabel("")
        self.search_results_label.setObjectName("searchResultsLabel")
        self.search_results_label.hide()
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        self.prev_result_button = QPushButton("‚ñ≤")
        self.prev_result_button.setObjectName("navButton")
        self.prev_result_button.setFixedSize(32, 32)
        self.prev_result_button.clicked.connect(self.goto_prev_result)
        self.prev_result_button.hide()
        
        self.next_result_button = QPushButton("‚ñº")
        self.next_result_button.setObjectName("navButton")
        self.next_result_button.setFixedSize(32, 32)
        self.next_result_button.clicked.connect(self.goto_next_result)
        self.next_result_button.hide()
        
        # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–∏—Å–∫–∞
        self.clear_search_button = QPushButton("√ó")
        self.clear_search_button.setObjectName("clearSearchButton")
        self.clear_search_button.setFixedSize(32, 32)
        self.clear_search_button.clicked.connect(self.clear_console_search)
        self.clear_search_button.hide()
        
        console_header_layout.addWidget(self.toggleConsoleButton)
        console_header_layout.addWidget(self.console_search)
        console_header_layout.addWidget(self.search_results_label)
        console_header_layout.addWidget(self.prev_result_button)
        console_header_layout.addWidget(self.next_result_button)
        console_header_layout.addWidget(self.clear_search_button)
        
        # –ö–æ–Ω—Å–æ–ª—å
        self.console = QtWidgets.QTextEdit()
        self.console.setObjectName("console")
        self.console.setReadOnly(True)
        
        layout.addWidget(console_header)
        layout.addWidget(self.console)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.console.append("‚ú® –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
        self.console.append("üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
        self.console.append("üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–≤–µ—Ä—Ö—É –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Å–æ–ª–∏")
        self.console.append("üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–æ–Ω—Å–æ–ª–∏
        self.original_console_text = self.console.toPlainText()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞
        self.current_search_index = -1
        self.search_results = []

    def search_console(self, text):
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        cursor = self.console.textCursor()
        cursor.select(QtGui.QTextCursor.SelectionType.Document)
        cursor.setCharFormat(QtGui.QTextCharFormat())
        cursor.clearSelection()
        
        if not text:
            self.clear_search_button.hide()
            self.search_results_label.hide()
            self.prev_result_button.hide()
            self.next_result_button.hide()
            self.current_search_index = -1
            self.search_results = []
            return
            
        self.clear_search_button.show()
        
        # –ò—â–µ–º –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        cursor = self.console.document().find(text, 0)
        self.search_results = []
        format = QtGui.QTextCharFormat()
        format.setBackground(QColor("#3B3F51"))
        
        while not cursor.isNull():
            self.search_results.append(cursor)
            cursor.setCharFormat(format)
            cursor = self.console.document().find(text, cursor)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º UI
        if self.search_results:
            self.search_results_label.show()
            self.prev_result_button.show()
            self.next_result_button.show()
            self.current_search_index = 0
            self.highlight_current_result()
        else:
            self.search_results_label.show()
            self.prev_result_button.hide()
            self.next_result_button.hide()
            self.current_search_index = -1
            
        self.update_search_counter()
        
    def highlight_current_result(self):
        if not self.search_results or self.current_search_index < 0:
            return
            
        # –°–Ω–∞—á–∞–ª–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        for cursor in self.search_results:
            format = QtGui.QTextCharFormat()
            format.setBackground(QColor("#3B3F51"))
            cursor.setCharFormat(format)
        
        # –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        current_cursor = self.search_results[self.current_search_index]
        format = QtGui.QTextCharFormat()
        format.setBackground(QColor("#7B5AF4"))
        current_cursor.setCharFormat(format)
        
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ç–µ–∫—É—â–µ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        self.console.setTextCursor(current_cursor)
        self.console.ensureCursorVisible()
        
    def update_search_counter(self):
        if not self.search_results:
            self.search_results_label.setText("–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        else:
            self.search_results_label.setText(f"{self.current_search_index + 1} –∏–∑ {len(self.search_results)}")
            
    def goto_next_result(self):
        if self.search_results:
            self.current_search_index = (self.current_search_index + 1) % len(self.search_results)
            self.highlight_current_result()
            self.update_search_counter()
            
    def goto_prev_result(self):
        if self.search_results:
            self.current_search_index = (self.current_search_index - 1) % len(self.search_results)
            self.highlight_current_result()
            self.update_search_counter()
            
    def clear_console_search(self):
        self.console_search.clear()
        cursor = self.console.textCursor()
        cursor.select(QtGui.QTextCursor.SelectionType.Document)
        cursor.setCharFormat(QtGui.QTextCharFormat())
        cursor.clearSelection()
        self.clear_search_button.hide()
        self.search_results_label.hide()
        self.prev_result_button.hide()
        self.next_result_button.hide()
        self.current_search_index = -1
        self.search_results = []
        
    def append_to_console(self, text):
        """–ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
        self.console.append(text)
        self.original_console_text = self.console.toPlainText()
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç –≤ –ø–æ–∏—Å–∫–µ, –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
        if self.console_search.text():
            self.search_console(self.console_search.text())
        
    def setup_settings_page(self):
        settings_page = QWidget()
        main_layout = QVBoxLayout(settings_page)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.setSpacing(0)

        # –°–æ–∑–¥–∞–µ–º QScrollArea
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setMinimumHeight(400)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É
        scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        scroll_area.setStyleSheet("""
            QScrollArea {
                border: none;
                background-color: #1A1B26;
            }
            QScrollBar:vertical {
                border: none;
                background: #1A1B26;
                width: 8px;
                margin: 0;
            }
            QScrollBar::handle:vertical {
                background: #7B5AF4;
                border-radius: 4px;
                min-height: 20px;
            }
            QScrollBar::handle:vertical:hover {
                background: #8D6FF5;
            }
            QScrollBar::add-line:vertical,
            QScrollBar::sub-line:vertical {
                height: 0px;
            }
            QScrollBar::add-page:vertical,
            QScrollBar::sub-page:vertical {
                background: none;
            }
        """)

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        content_widget = QWidget()
        content_widget.setObjectName("settingsContent")
        content_widget.setStyleSheet("""
            QWidget#settingsContent {
                background-color: #1A1B26;
            }
        """)
        layout = QVBoxLayout(content_widget)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(20)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏ —Å PDF
        pdf_frame = QFrame()
        pdf_frame.setObjectName("pdfFrame")
        pdf_frame.setStyleSheet("""
            QFrame#pdfFrame {
                background-color: #2F3242;
                border-radius: 15px;
                padding: 20px;
            }
        """)
        
        # –°–æ–∑–¥–∞–µ–º grid layout –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        pdf_layout = QGridLayout(pdf_frame)
        pdf_layout.setContentsMargins(20, 20, 20, 20)
        pdf_layout.setSpacing(15)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        self.pdf_folder_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É —Å PDF —Ñ–∞–π–ª–∞–º–∏")
        self.pdf_folder_label.setObjectName("pdfFolderLabel")
        
        self.select_pdf_folder_button = QPushButton("–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É")
        self.select_pdf_folder_button.setObjectName("selectPdfFolderButton")
        
        self.selected_pdf_folder_label = QLabel("–ü–∞–ø–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞")
        self.selected_pdf_folder_label.setObjectName("selectedPdfFolderLabel")
        
        pdf_layout.addWidget(self.pdf_folder_label, 0, 0)
        pdf_layout.addWidget(self.select_pdf_folder_button, 0, 1)
        pdf_layout.addWidget(self.selected_pdf_folder_label, 1, 0, 1, 2)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å" –≤–Ω–∏–∑—É —Ñ—Ä–µ–π–º–∞
        load_button_layout = QHBoxLayout()
        load_button_layout.addStretch()
        
        self.load_pdf_button = QPushButton("–ó–∞–≥—Ä—É–∑–∏—Ç—å")
        self.load_pdf_button.setObjectName("loadPdfButton")
        self.load_pdf_button.setFixedWidth(200)
        
        load_button_layout.addWidget(self.load_pdf_button)
        load_button_layout.addStretch()
        
        pdf_layout.addLayout(load_button_layout, 2, 0, 1, 2)
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å—Ç—è–∂–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
        pdf_layout.setColumnStretch(0, 1)  # –õ–µ–π–±–ª—ã –±—É–¥—É—Ç —Ä–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å—Å—è
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—Ä–µ–π–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        layout.addWidget(pdf_frame)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –∏ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –ë–î
        db_frame = QFrame()
        db_frame.setObjectName("dbFrame")
        db_frame.setStyleSheet("""
            QFrame#dbFrame {
                background-color: #2F3242;
                border-radius: 15px;
                padding: 20px;
            }
        """)
        
        db_layout = QVBoxLayout(db_frame)
        db_layout.setContentsMargins(20, 20, 20, 20)
        db_layout.setSpacing(15)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        progress_label = QLabel("–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        progress_label.setObjectName("progressLabel")
        db_layout.addWidget(progress_label)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress_bar = QtWidgets.QProgressBar()
        self.progress_bar.setObjectName("progressBar")
        self.progress_bar.setValue(0)
        self.progress_bar.setTextVisible(True)
        db_layout.addWidget(self.progress_bar)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏ –ë–î
        clear_button_layout = QHBoxLayout()
        clear_button_layout.addStretch()
        
        self.clear_db_button = QPushButton("–û—á–∏—Å—Ç–∏—Ç—å –ë–î")
        self.clear_db_button.setObjectName("clearDbButton")
        self.clear_db_button.setFixedWidth(200)
        
        clear_button_layout.addWidget(self.clear_db_button)
        clear_button_layout.addStretch()
        
        db_layout.addLayout(clear_button_layout)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—Ä–µ–π–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        layout.addWidget(db_frame)

        # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –≤—ã–±–æ—Ä–∞ Excel —Ñ–∞–π–ª–æ–≤
        excel_frame = QFrame()
        excel_frame.setObjectName("excelFrame")
        excel_frame.setStyleSheet("""
            QFrame#excelFrame {
                background-color: #2F3242;
                border-radius: 15px;
                padding: 20px;
            }
        """)

        excel_layout = QGridLayout(excel_frame)
        excel_layout.setContentsMargins(20, 20, 20, 20)
        excel_layout.setSpacing(15)

        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ Excel —Ñ–∞–π–ª–∞
        self.excel1_button = QPushButton("Excel c –ø–æ–≥–æ–¥–æ–π")
        self.excel1_button.setObjectName("selectExcelButton")
        self.excel1_label = QLabel("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
        self.excel1_label.setObjectName("excelPathLabel")

        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ Excel —Ñ–∞–π–ª–∞
        self.excel2_button = QPushButton("Excel —Å –°–ë–ö–¢–°")
        self.excel2_button.setObjectName("selectExcelButton")
        self.excel2_label = QLabel("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
        self.excel2_label.setObjectName("excelPathLabel")

        # –†–∞–∑–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–µ—Ç–∫–µ
        excel_layout.addWidget(self.excel1_button, 0, 0)
        excel_layout.addWidget(self.excel1_label, 0, 1)
        excel_layout.addWidget(self.excel2_button, 1, 0)
        excel_layout.addWidget(self.excel2_label, 1, 1)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –ª–∏—Å—Ç–æ–≤
        sheet_label = QLabel("–ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –≤ Excel:")
        sheet_label.setObjectName("sheetLabel")
        excel_layout.addWidget(sheet_label, 2, 0, 1, 2)

        # –¢–æ–ª—å–∫–æ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ Excel —Ñ–∞–π–ª–∞
        self.sheet2_label = QLabel("–õ–∏—Å—Ç —Å –°–ë–ö–¢–°:")
        self.sheet2_label.setObjectName("sheetNameLabel")
        self.sheet2_input = QLineEdit()
        self.sheet2_input.setObjectName("sheetInput")
        self.sheet2_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞")
        excel_layout.addWidget(self.sheet2_label, 3, 0)
        excel_layout.addWidget(self.sheet2_input, 3, 1)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        excel_frame.setStyleSheet(excel_frame.styleSheet() + """
            QLabel#sheetLabel {
                color: #FFFFFF;
                font-size: 14px;
                font-weight: bold;
                margin-top: 15px;
            }
            
            QLabel#sheetNameLabel {
                color: #FFFFFF;
                font-size: 14px;
            }
            
            QLineEdit#sheetInput {
                background-color: #2F3242;
                color: white;
                border: 1px solid #3D4258;
                border-radius: 4px;
                padding: 5px 10px;
                font-size: 14px;
            }
            
            QLineEdit#sheetInput:focus {
                border: 1px solid #7B5AF4;
            }
            
            QLineEdit#sheetInput::placeholder {
                color: #8F96B3;
            }
        """)

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å—Ç—è–∂–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
        excel_layout.setColumnStretch(1, 1)  # –õ–µ–π–±–ª—ã –±—É–¥—É—Ç —Ä–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å—Å—è

        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—Ä–µ–π–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        layout.addWidget(excel_frame)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —Å–ø–µ–π—Å–µ—Ä –≤ –∫–æ–Ω–µ—Ü
        layout.addStretch()
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        settings_page.setStyleSheet(settings_page.styleSheet() + """
            QPushButton#selectExcelButton {
                background-color: #7B5AF4;
                color: white;
                border: none;
                border-radius: 8px;
                padding: 8px 16px;
                font-size: 14px;
                font-weight: bold;
                min-width: 150px;
            }
            
            QPushButton#selectExcelButton:hover {
                background-color: #8D6FF5;
            }
            
            QLabel#excelPathLabel {
                color: #FFFFFF;
                font-size: 14px;
                padding-left: 16px;
                opacity: 0.9;
            }
        """)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –≤ QScrollArea
        scroll_area.setWidget(content_widget)
        main_layout.addWidget(scroll_area)
        
        return settings_page

    def select_excel_file(self, button_num: int):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ Excel —Ñ–∞–π–ª–∞"""
        file_path, _ = QFileDialog.getOpenFileName(
            self,
            f"–í—ã–±–µ—Ä–∏—Ç–µ Excel —Ñ–∞–π–ª {button_num}",
            "",
            "Excel Files (*.xlsx *.xls);;All Files (*)"
        )
        if file_path:
            if button_num == 1:
                self.excel1_path = file_path
                self.excel1_label.setText(file_path)
                self.append_to_console(f"[–ò–ù–§–û] –í—ã–±—Ä–∞–Ω Excel —Ñ–∞–π–ª 1: {file_path}")
            else:
                self.excel2_path = file_path
                self.excel2_label.setText(file_path)
                self.append_to_console(f"[–ò–ù–§–û] –í—ã–±—Ä–∞–Ω Excel —Ñ–∞–π–ª 2: {file_path}")

    def setup_animations(self):
        self.menu_animation = QPropertyAnimation(self.sideMenu, b'minimumWidth')
        self.menu_animation.setDuration(300)
        self.menu_animation.setEasingCurve(QEasingCurve.Type.InOutQuart)
        
        self.console_animation = QPropertyAnimation(self.consoleWidget, b'maximumHeight')
        self.console_animation.setDuration(300)
        self.console_animation.setEasingCurve(QEasingCurve.Type.InOutQuart)
        
    def setup_connections(self):
        self.minimizeButton.clicked.connect(self.showMinimized)
        self.maximizeButton.clicked.connect(self.toggle_maximize)
        self.closeButton.clicked.connect(self.close)
        
        self.menuButton.clicked.connect(self.toggle_menu)
        self.homeButton.clicked.connect(lambda: self.switch_page(0, "–ì–ª–∞–≤–Ω–∞—è"))
        self.settingsButton.clicked.connect(lambda: self.switch_page(1, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
        self.toggleConsoleButton.clicked.connect(self.toggle_console)
        
        # self.start_button.clicked.connect(self.start_processing)
        self.select_file1_button.clicked.connect(self.open_db)
        
        self.select_pdf_folder_button.clicked.connect(self.select_pdf_folder)
        self.load_pdf_button.clicked.connect(self.load_pdf)
        self.clear_db_button.clicked.connect(self.clear_database)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ Excel —Ñ–∞–π–ª–æ–≤
        self.excel1_button.clicked.connect(lambda: self.select_excel_file(1))
        self.excel2_button.clicked.connect(lambda: self.select_excel_file(2))
    
    def open_db(self):
        try:
            
            self.db_window = TableWindow()
            
            self.db_window.show()
        except Exception as e:
            print(f"[CRITICAL ERROR MAIN] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            import traceback
            print(traceback.format_exc())
            QMessageBox.critical(self, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:\n{str(e)}")
        
    def toggle_maximize(self):
        if self.isMaximized():
            self.showNormal()
            self.maximizeButton.setText("‚ùê")
        else:
            self.showMaximized()
            self.maximizeButton.setText("‚ñ°")
            
    def resizeEvent(self, event):
        super().resizeEvent(event)
        rect = self.rect()
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
        self.left_grip.setGeometry(0, 5, 10, rect.height() - 10)
        self.right_grip.setGeometry(rect.width() - 10, 5, 10, rect.height() - 10)
        self.top_grip.setGeometry(5, 0, rect.width() - 10, 10)
        self.bottom_grip.setGeometry(5, rect.height() - 10, rect.width() - 10, 10)
        
    def mousePressEvent(self, event):
        if event.button() == Qt.MouseButton.LeftButton and event.pos().y() <= self.titleBar.height():
            self.oldPos = event.globalPosition().toPoint()

    def mouseMoveEvent(self, event):
        if hasattr(self, 'oldPos'):
            delta = event.globalPosition().toPoint() - self.oldPos
            self.move(self.x() + delta.x(), self.y() + delta.y())
            self.oldPos = event.globalPosition().toPoint()

    def mouseReleaseEvent(self, event):
        if hasattr(self, 'oldPos'):
            del self.oldPos
        
    def toggle_menu(self):
        width = self.menu_min_width if self.is_menu_expanded else self.menu_max_width
        self.menu_animation.setStartValue(self.sideMenu.width())
        self.menu_animation.setEndValue(width)
        self.menu_animation.start()
        
        idx = 0 if self.is_menu_expanded else 1
        self.homeButton.setText(self.button_texts['home'][idx])
        self.settingsButton.setText(self.button_texts['settings'][idx])
        
        self.is_menu_expanded = not self.is_menu_expanded
        
    def toggle_console(self, event=None):
        height = self.console_min_height if self.is_console_expanded else self.console_max_height
        self.console_animation.setStartValue(self.consoleWidget.height())
        self.console_animation.setEndValue(height)
        self.console_animation.start()
        self.is_console_expanded = not self.is_console_expanded
        
        self.toggleConsoleButton.setText('‚ñº' if self.is_console_expanded else '‚ñ≤')
        
    def select_file(self, file_num):
        file_path, _ = QFileDialog.getOpenFileName(self, f"–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª {file_num}", "", "All Files (*)")
        if file_path:
            if file_num == 1:
                self.file1_path = file_path
                self.file1_label.setText(f"–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {os.path.basename(file_path)}")
            else:
                self.file2_path = file_path
                self.file2_label.setText(f"–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {os.path.basename(file_path)}")
                
    def start_processing(self):
        if not hasattr(self, 'file1_path') or not hasattr(self, 'file2_path'):
            self.append_to_console("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return
        
        self.append_to_console(f"‚úÖ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–æ–≤:")
        self.append_to_console(f"üìÑ –§–∞–π–ª 1: {self.file1_path}")
        self.append_to_console(f"üìÑ –§–∞–π–ª 2: {self.file2_path}")
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤
        # –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.stats_widget.update_stats(75, 25)  # –ü—Ä–∏–º–µ—Ä: 75% —É—Å–ø–µ—à–Ω—ã—Ö, 25% –Ω–µ—É—Å–ø–µ—à–Ω—ã—Ö

    def switch_page(self, index, title):
        self.stackedWidget.setCurrentIndex(index)
        self.page_title.setText(title)

    def select_pdf_folder(self):
        folder_path = QFileDialog.getExistingDirectory(self, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É —Å PDF —Ñ–∞–π–ª–∞–º–∏")
        if folder_path:
            self.selected_pdf_folder_label.setText(f"–í—ã–±—Ä–∞–Ω–∞ –ø–∞–ø–∫–∞: {folder_path}")

    def load_pdf(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ PDF —Ñ–∞–π–ª–æ–≤"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å PDF —Ñ–∞–π–ª–∞–º–∏
            folder_path = self.selected_pdf_folder_label.text().replace("–í—ã–±—Ä–∞–Ω–∞ –ø–∞–ø–∫–∞: ", "")
            if not folder_path or not os.path.exists(folder_path):
                QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–∞–ø–∫—É —Å PDF —Ñ–∞–π–ª–∞–º–∏")
                return
                
            # –û—á–∏—â–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            self.progress_bar.setValue(0)
            
            # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫
            self.pdf_thread = PDFProcessThread(
                folder_path=folder_path,
                excel_path=self.excel1_path,  # Excel —Å –ø–æ–≥–æ–¥–æ–π
                sheet_name=None,  # –õ–∏—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                sbkts_excel_path=self.excel2_path,  # Excel —Å –°–ë–ö–¢–°
                sbkts_sheet_name=self.sheet2_input.text()  # –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –∏–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞
            )
            
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
            self.pdf_thread.progress_updated.connect(self.update_progress)
            self.pdf_thread.file_processed.connect(self.handle_processed_file)
            self.pdf_thread.processing_finished.connect(self.handle_processing_finished)
            self.pdf_thread.error_occurred.connect(self.handle_error)
            self.pdf_thread.stats_updated.connect(self.update_stats_from_thread)
            # –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
            self.load_pdf_button.setEnabled(False)
            self.load_pdf_button.setText("–û–±—Ä–∞–±–æ—Ç–∫–∞...")
            self.clear_db_button.setEnabled(False)
            self.select_pdf_folder_button.setEnabled(False)
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫
            self.pdf_thread.start()
            
        except Exception as e:
            print(f"[CRITICAL ERROR MAIN] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            import traceback
            print(traceback.format_exc())
            QMessageBox.critical(self, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:\n{str(e)}")
            self.handle_processing_finished()  # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UI

    def handle_processed_file(self, filename, data):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞"""
        self.append_to_console(f"\n{'='*50}")
        self.append_to_console(f"üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω —Ñ–∞–π–ª: {filename}")
        self.append_to_console(f"{'='*50}")
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª—å
        for key, value in data.items():
            if isinstance(value, dict):
                self.append_to_console(f"\n‚Ä¢ {key}:")
                for subkey, subvalue in value.items():
                    if subvalue:  # –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                        self.append_to_console(f"    ‚Ä£ {subkey}: {subvalue}")
            elif value:  # –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                self.append_to_console(f"‚Ä¢ {key}: {value}")
                
    def handle_processing_finished(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—Å–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        self.load_pdf_button.setEnabled(True)
        self.load_pdf_button.setText("–ó–∞–≥—Ä—É–∑–∏—Ç—å")
        self.clear_db_button.setEnabled(True)
        self.select_pdf_folder_button.setEnabled(True)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
        self.append_to_console("\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    def handle_error(self, error_message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –æ–± –æ—à–∏–±–∫–µ"""
        self.append_to_console(f"\n‚ùå {error_message}")
        
    def update_progress(self, value):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞"""
        self.progress_bar.setValue(value)

    def clear_database(self):
        try:
            # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            msg_box = QMessageBox()
            msg_box.setWindowTitle("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ")
            msg_box.setText("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö?")
            msg_box.setInformativeText("–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!")
            msg_box.setIcon(QMessageBox.Icon.Warning)
            msg_box.setStandardButtons(QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
            msg_box.setDefaultButton(QMessageBox.StandardButton.No)
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
            msg_box.setStyleSheet("""
                QMessageBox {
                    background-color: #1A1B26;
                }
                QMessageBox QLabel {
                    color: white;
                }
                QPushButton {
                    background-color: #7B5AF4;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    padding: 5px 15px;
                    min-width: 60px;
                }
                QPushButton:hover {
                    background-color: #8D6FF5;
                }
            """)

            reply = msg_box.exec()

            if reply == QMessageBox.StandardButton.Yes:
                # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ë–î
                self.db_thread = DatabaseThread()
                self.db_thread.success.connect(self.append_to_console)
                self.db_thread.error.connect(self.handle_error)
                self.db_thread.finished.connect(self._on_tables_deleted)
                self.db_thread.start()

                # –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –≤—Ä–µ–º—è –æ—á–∏—Å—Ç–∫–∏
                self.load_pdf_button.setEnabled(False)
                self.clear_db_button.setEnabled(False)

        except Exception as e:
            print(f"[CRITICAL ERROR MAIN] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ë–î: {str(e)}")
            QMessageBox.critical(self, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ë–î:\n{str(e)}")
        
    def _on_tables_deleted(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ –ë–î"""
        # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        self.load_pdf_button.setEnabled(True)
        self.clear_db_button.setEnabled(True)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.append_to_console("[–ò–ù–§–û] –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    def update_stats_from_thread(self, success_count, total_count):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤–∏–¥–∂–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ—Ç–æ–∫–∞"""
        if total_count > 0:
            success_rate = (success_count / total_count) * 100
            fail_rate = ((total_count - success_count) / total_count) * 100
            self.stats_widget.update_stats(success_rate, fail_rate)
class StatsWidget(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setMinimumHeight(200)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É
        self.success_rate = 0
        self.fail_rate = 0
        
    def paintEvent(self, event):
        painter = QPainter(self)
        painter.setRenderHint(QPainter.RenderHint.Antialiasing)
        
        width = self.width()
        height = self.height()
        
        # –†–∏—Å—É–µ–º —Ñ–æ–Ω–æ–≤—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å –∑–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ —É–≥–ª–∞–º–∏
        background_rect = QRectF(0, 0, width, height)
        path = QPainterPath()
        path.addRoundedRect(background_rect, 15, 15)
        painter.setPen(Qt.PenStyle.NoPen)
        painter.setBrush(QColor("#2F3242"))
        painter.drawPath(path)
        
        # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–∏–∞–≥—Ä–∞–º–º—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ—Ç—ã –≤–∏–¥–∂–µ—Ç–∞
        pie_size = min(height - 40, 160)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–∂–Ω–∏–π —Ä–∞–∑–º–µ—Ä
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –∏ —Å–º–µ—â–∞–µ–º –≤–ª–µ–≤–æ
        rect = QRectF(60, (height - pie_size) / 2, pie_size, pie_size)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–∂–Ω–∏–π –æ—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞
        
        # –†–∏—Å—É–µ–º —Ñ–æ–Ω–æ–≤—ã–π –∫—Ä—É–≥
        painter.setPen(Qt.PenStyle.NoPen)
        painter.setBrush(QColor("#1A1B26"))
        painter.drawEllipse(rect)
        
        start_angle = 90  # –ù–∞—á–∏–Ω–∞–µ–º —Å 90 –≥—Ä–∞–¥—É—Å–æ–≤ (—Å–≤–µ—Ä—Ö—É)
        center = rect.center()
        
        # –†–∏—Å—É–µ–º —É—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–Ω–æ–≤—ã–π —Ü–≤–µ—Ç)
        if self.success_rate > 0:
            painter.setBrush(QColor("#947CF5"))
            success_span = int(360 * self.success_rate / 100)
            painter.drawPie(rect, start_angle * 16, -success_span * 16)
            
            # –†–∏—Å—É–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
            if self.success_rate >= 5:
                success_angle = start_angle - (success_span / 2)
                radius = rect.width() * 0.42  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–¥–∏—É—Å –¥–ª—è —Ç–µ–∫—Å—Ç–∞
                angle_rad = math.radians(success_angle)
                x = center.x() + radius * math.cos(angle_rad)
                y = center.y() - radius * math.sin(angle_rad)
                painter.setPen(QColor("#FFFFFF"))
                painter.drawText(QRectF(x-20, y-10, 40, 20), Qt.AlignmentFlag.AlignCenter, f"{int(self.success_rate)}%")
            
            start_angle -= success_span
        
        # –†–∏—Å—É–µ–º –Ω–µ—É—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–Ω–æ–≤—ã–π —Ü–≤–µ—Ç)
        if self.fail_rate > 0:
            painter.setPen(Qt.PenStyle.NoPen)
            painter.setBrush(QColor("#F87381"))
            fail_span = int(360 * self.fail_rate / 100)
            painter.drawPie(rect, start_angle * 16, -fail_span * 16)
            
            # –†–∏—Å—É–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è –Ω–µ—É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
            if self.fail_rate >= 5:
                fail_angle = start_angle - (fail_span / 2)
                radius = rect.width() * 0.42  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–¥–∏—É—Å –¥–ª—è —Ç–µ–∫—Å—Ç–∞
                angle_rad = math.radians(fail_angle)
                x = center.x() + radius * math.cos(angle_rad)
                y = center.y() - radius * math.sin(angle_rad)
                painter.setPen(QColor("#FFFFFF"))
                painter.drawText(QRectF(x-20, y-10, 40, 20), Qt.AlignmentFlag.AlignCenter, f"{int(self.fail_rate)}%")
        
        # –†–∏—Å—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª—å—Ü–∞
        inner_size = pie_size * 0.65  # –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫—Ä—É–≥–∞
        inner_rect = QRectF(
            rect.center().x() - inner_size/2,
            rect.center().y() - inner_size/2,
            inner_size,
            inner_size
        )
        painter.setPen(Qt.PenStyle.NoPen)  # –£–±–∏—Ä–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—É
        painter.setBrush(QColor("#1A1B26"))
        painter.drawEllipse(inner_rect)
        
        # –†–∏—Å—É–µ–º –ª–µ–≥–µ–Ω–¥—É
        legend_x = rect.right() + 30
        legend_y = rect.center().y() - 30
        
        # –£—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –ª–µ–≥–µ–Ω–¥–µ (–Ω–æ–≤—ã–π —Ü–≤–µ—Ç)
        painter.setPen(Qt.PenStyle.NoPen)
        painter.setBrush(QColor("#947CF5"))
        painter.drawRect(int(legend_x), int(legend_y), 16, 16)
        painter.setPen(QColor("#FFFFFF"))
        painter.drawText(QRectF(legend_x + 24, legend_y - 2, 100, 20), "–£—Å–ø–µ—à–Ω–æ")
        
        # –ù–µ—É—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –ª–µ–≥–µ–Ω–¥–µ (–Ω–æ–≤—ã–π —Ü–≤–µ—Ç)
        painter.setPen(Qt.PenStyle.NoPen)
        painter.setBrush(QColor("#F87381"))
        painter.drawRect(int(legend_x), int(legend_y + 30), 16, 16)
        painter.setPen(QColor("#FFFFFF"))
        painter.drawText(QRectF(legend_x + 24, legend_y + 28, 100, 20), "–û—à–∏–±–∫–∏")
        
    def update_stats(self, success_rate, fail_rate):
        self.success_rate = success_rate
        self.fail_rate = fail_rate
        self.update()

class DatabaseThread(QThread):
    success = pyqtSignal(str)  # –°–∏–≥–Ω–∞–ª –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    error = pyqtSignal(str)    # –°–∏–≥–Ω–∞–ª –¥–ª—è –æ—à–∏–±–æ–∫
    finished = pyqtSignal()    # –°–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã

    def __init__(self):
        super().__init__()
        self.db = None

    def run(self):
        try:
            # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –≤ —Ç–µ–∫—É—â–µ–º –ø–æ—Ç–æ–∫–µ
            self.db = Database()
            
            # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É vehicles
            self.db._execute_query("DELETE FROM vehicles")
            self.success.emit("[–ò–ù–§–û] –¢–∞–±–ª–∏—Ü–∞ vehicles –æ—á–∏—â–µ–Ω–∞")
            self.success.emit("[–ò–ù–§–û] –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞")
            
        except Exception as e:
            self.error.emit(f"[–û–®–ò–ë–ö–ê] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        finally:
            if self.db:
                self.db.close()
            self.finished.emit()

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec()) 